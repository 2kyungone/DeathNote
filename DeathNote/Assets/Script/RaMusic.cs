using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NoteData
{
    public int beat;
    public int pos;
    public int length;

    public NoteData(int b, int x, int l)
    {
        this.beat = b;
        this.pos = x;
        this.length = l;
    }
}

public class RaMusic : MonoBehaviour
{
    public static RaMusic instance;

    public AudioSource audioSource; // 오디오 정보
    public string musicTitle; // 음악의 제목
    public float musicLength; // 음악의 길이
    public float musicEnd; // 음악이 끝나는 시간
    public int totalNote; // 총 노트의 갯수
    public int bpm = 0; // beats per minute : 1분당 비트 수 
    public int songBeat = 4; // 한 마디의 비트 수 
    public int stdBeat = 4; // 한 비트의 길이
    public float offset = 0; // 노래가 시작되는 시작된 지점
    public float customOffset = 0; // 플레이어가 바꾼 오프셋

    int[] beat;
    int[] pos;
    int[] length;

    // 싱글톤 인스턴스에 접근하는 속성

    void Awake()
    {
        instance = this;
        audioSource = GetComponent<AudioSource>();
    }

    public NoteData getNoteData(int idx)
    {
        return new NoteData(beat[idx], pos[idx], length[idx]);
    }

    public void SetKanon()
    {
        AudioClip clip = Resources.Load<AudioClip>("Sound/hba");
        musicLength = clip.length;
        audioSource.clip = clip;
        musicTitle = "hba";
        bpm = 140;
        songBeat = 4;
        stdBeat = 4;
        offset = (float)-0.81f;
        customOffset = (float)0.0;
        totalNote = 402;
        beat = new int[] { 50, 90, 130, 170, 210, 250, 290, 330, 370, 370, 410, 410, 450, 450, 490, 490, 530, 530, 570, 570, 610, 610, 650, 650, 690, 690, 730, 730, 750, 770, 770, 810, 810, 830, 850, 850, 890, 890, 910, 930, 930, 970, 970, 1010, 1010, 1050, 1070, 1090, 1110, 1130, 1170, 1170, 1210, 1210, 1250, 1270, 1290, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1390, 1410, 1430, 1450, 1460, 1470, 1480, 1490, 1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 1610, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1710, 1730, 1750, 1770, 1780, 1790, 1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 1900, 1910, 1920, 1930, 1942, 1950, 1960, 1962, 1970, 1980, 1990, 2000, 2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100, 2110, 2120, 2130, 2140, 2150, 2160, 2170, 2180, 2190, 2200, 2210, 2220, 2230, 2240, 2250, 2260, 2270, 2280, 2290, 2300, 2310, 2320, 2330, 2340, 2350, 2360, 2370, 2380, 2390, 2400, 2410, 2420, 2430, 2440, 2450, 2460, 2470, 2480, 2490, 2500, 2510, 2520, 2530, 2540, 2550, 2560, 2570, 2580, 2590, 2600, 2610, 2620, 2622, 2630, 2640, 2642, 2650, 2652, 2660, 2662, 2670, 2672, 2680, 2682, 2690, 2700, 2702, 2710, 2720, 2722, 2730, 2732, 2740, 2742, 2750, 2752, 2760, 2762, 2770, 2780, 2782, 2790, 2800, 2802, 2810, 2812, 2820, 2822, 2830, 2832, 2840, 2842, 2850, 2860, 2862, 2870, 2880, 2882, 2890, 2892, 2900, 2902, 2910, 2912, 2920, 2922, 2930, 2940, 2942, 2950, 2960, 2962, 2970, 2972, 2980, 2982, 2990, 2992, 3000, 3002, 3010, 3020, 3022, 3030, 3040, 3042, 3050, 3052, 3060, 3062, 3070, 3072, 3080, 3082, 3090, 3100, 3102, 3110, 3120, 3122, 3130, 3132, 3140, 3142, 3150, 3152, 3160, 3162, 3170, 3180, 3182, 3190, 3200, 3202, 3210, 3212, 3220, 3222, 3230, 3232, 3240, 3242, 3250, 3260, 3262, 3270, 3280, 3282, 3290, 3292, 3300, 3302, 3310, 3312, 3320, 3322, 3330, 3340, 3342, 3350, 3360, 3362, 3370, 3372, 3380, 3382, 3390, 3392, 3400, 3402, 3410, 3420, 3422, 3430, 3440, 3442, 3450, 3452, 3460, 3462, 3470, 3472, 3480, 3482, 3490, 3500, 3502, 3510, 3520, 3522, 3530, 3532, 3540, 3542, 3550, 3552, 3560, 3562, 3570, 3580, 3582, 3590, 3600, 3602, 3610, 3612, 3620, 3622, 3630, 3632, 3640, 3642, 3650, 3660, 3662, 3670, 3680, 3682, 3690, 3692, 3700, 3702, 3710, 3712, 3720, 3722, 3730, 3740, 3742, 3750, 3760, 3762, 3770, 3772, 3780, 3782, 3790, 3792, 3800, 3802, 3810, 3820, 3822, 3830, 3840, 3842, 3850, 3852, 3860, 3862, 3870, 3872, 3880, 3882, 3890 };
        pos = new int[] { 000, 015, 003, 012, 001, 014, 002, 013, 000, 001, 007, 006, 004, 008, 015, 011, 005, 006, 009, 010, 012, 003, 000, 015, 001, 005, 008, 009, 010, 014, 015, 011, 010, 009, 002, 006, 012, 008, 004, 000, 001, 006, 007, 011, 000, 001, 002, 003, 007, 011, 015, 005, 006, 009, 010, 000, 001, 002, 003, 006, 005, 010, 009, 013, 014, 001, 002, 003, 001, 002, 003, 007, 006, 005, 004, 008, 009, 010, 011, 015, 013, 014, 010, 007, 002, 006, 005, 010, 009, 013, 014, 001, 002, 003, 001, 002, 003, 007, 006, 005, 004, 008, 009, 010, 011, 015, 014, 013, 012, 010, 004, 005, 006, 007, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 012 };
        length = new int[] {};
        Debug.Log(beat.Length);
        Debug.Log(pos.Length);
        Debug.Log(length.Length);
    }
}
