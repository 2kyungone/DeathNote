using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
//using static UnityEditor.PlayerSettings;
using UnityEngine.UIElements;

public class NoteData
{
    public int beat;
    public int pos;
    public int length;

    public NoteData(int b, int x, int l)
    {
        this.beat = b;
        this.pos = x;
        this.length = l;
    }
}

public class MusicManager : MonoBehaviour
{
    public static MusicManager instance;

    public AudioSource audioSource; // 오디오 정보
    public string musicTitle; // 음악의 제목
    public float musicLength; // 음악의 길이
    public float musicEnd; // 음악이 끝나는 시간
    public int totalNote; // 총 노트의 갯수
    public int bpm = 0; // beats per minute : 1분당 비트 수 
    public int songBeat = 4; // 한 마디의 비트 수 
    public int stdBeat = 4; // 한 비트의 길이
    public float offset = 0; // 노래가 시작되는 시작된 지점
    public float customOffset = 0; // 플레이어가 바꾼 오프셋

    public int[] beat;
    int[] pos;
    int[] length;

    // 싱글톤 인스턴스에 접근하는 속성

    void Awake()
    {
        instance = this;
        audioSource = GetComponent<AudioSource>();
    }

    public NoteData getNoteData(int idx)
    {
        return new NoteData(beat[idx], pos[idx],length[idx]);
    }

    //public void SetHowAboutYou()
    //{
    //    AudioClip clip = Resources.Load<AudioClip>("Sound/HowAboutYou");
    //    musicLength = clip.length;
    //    audioSource.clip = clip;
    //    musicTitle = "HowAboutYou";
    //    bpm = 98;
    //    songBeat = 4;
    //    stdBeat = 4;
    //    offset = (float)-0.03f;
    //    customOffset = (float)0.0;
    //    totalNote = 164;
    //    beat = new int[] { 50,61,62,64, 90,101,102,104, 130,141,142,144,147,  // 전주
    //        //1절 하이라이트
    //        170,191,192, //유 얼레디 노우 긱스
    //        210,221,222,224, // 에이유
    //        250,261,262,264, //넌 어떻게 사니
    //        290,300,301,304,306,326,328, //혹시 연애는 하니 괜찮
    //        330,352,355, //니~
    //        370,381,382,384,394, //오 유~ 내 노래는 들어
    //        410,412,420,422,430,432, //봤니~ 어때 괜
    //        450,452,453,455,457,460,473,//찮니~넌
    //        480,482,493,502,511, //어때 애 애 애
    //           //        //랩 시작
    //        531,532,540,551,552,553,561,562,563, //하 써 유 웨라 디플런 두 하지만
    //        570,581,590,591,592,593,592,603, //느껴지지 않아 아무 미련두 날
    //        610,620,622,631,632,633,641,642,643, //차버린 너가 원망스러워 눈물로
    //        650,660,661,662,663,670,671,673,680,683, //지새우던 밤은 이제 끝났다고 내
    //        690, 700,703,710,720,722,723,//우스웠던 꼴이? 확 변했단 소리? 이제
    //        730, 740,750,753,760,761,//혼자서만 즐겨 나의 토이 스토리 내
    //        770, 780,800,802,//없어진 고민 시원하게 비워내
    //        811,812,820,822,831,832,840,842,//멈춰있기엔 발리 흘러가는 세월이
    //        851,852,860,871,872,880,882,883, //기에 열심히 노력한 만크음
    //        900,910,920,922,923,//나에게 돌아오는 좋은 대답드을
    //        930,940,951,952,//오늘따라 부는 바람도 참
    //        970,980,992,993,//기분 좋은 노래소리 같은걸
    //        1010,1020,1032,1033,//난 잘 지내는데에 오
    //        1050,1060,1072,1080,1082,1083,//걸 하우바웃유우 요샌
    //        1090,1100,1102,1103,1110,1113,1122,1123,//항상 웃으며 살아가 어떠
    //        1130,1131,1132,1140,1142,1150,1160//어떠냐고 아임 파인 땡큐우
    //         };
    //    pos = new int[] { 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015 };
    //    length = new int[] {};
    //    Debug.Log(beat.Length);
    //    Debug.Log(pos.Length);
    //    Debug.Log(length.Length);
    //}

    public void SetSomeDay()
    {
        AudioClip clip = Resources.Load<AudioClip>("Sound/SomeDay");
        musicLength = clip.length;
        audioSource.clip = clip;
        musicTitle = "SomeDay";
        bpm = 78;
        songBeat = 4;
        stdBeat = 4;
        offset = (float)-0.7f;
        customOffset = (float)0.0;
        totalNote = 402;
        beat = new int[] { 
            50,60,70,71,73,80,
            90,100,103,110,112,120,
            130,140,150,151,152,160,
            170,180,183,190,191,200,
            210,220,223,230,231,232,240,
            250,260,263,270,272,280,
            290,300,310,311,312,320,
            330,340,343,350,351,360,
            370, 371,372,373, 381, 383,390,391,393,400,402,403,
            410, 410, 450, 450, 490, 490, 530, 530, 570, 570, 610, 610, 650, 650, 690, 690, 730, 730, 750, 770, 770, 810, 810, 830, 850, 850, 890, 890, 910, 930, 930, 970, 970, 1010, 1010, 1050, 1070, 1090, 1110, 1130, 1170, 1170, 1210, 1210, 1250, 1270, 1290, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1390, 1410, 1430, 1450, 1460, 1470, 1480, 1490, 1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 1610, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1710, 1730, 1750, 1770, 1780, 1790, 1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 1900, 1910, 1920, 1930, 1942, 1950, 1960, 1962, 1970, 1980, 1990, 2000, 2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100, 2110, 2120, 2130, 2140, 2150, 2160, 2170, 2180, 2190, 2200, 2210, 2220, 2230, 2240, 2250, 2260, 2270, 2280, 2290, 2300, 2310, 2320, 2330, 2340, 2350, 2360, 2370, 2380, 2390, 2400, 2410, 2420, 2430, 2440, 2450, 2460, 2470, 2480, 2490, 2500, 2510, 2520, 2530, 2540, 2550, 2560, 2570, 2580, 2590, 2600, 2610, 2620, 2622, 2630, 2640, 2642, 2650, 2652, 2660, 2662, 2670, 2672, 2680, 2682, 2690, 2700, 2702, 2710, 2720, 2722, 2730, 2732, 2740, 2742, 2750, 2752, 2760, 2762, 2770, 2780, 2782, 2790, 2800, 2802, 2810, 2812, 2820, 2822, 2830, 2832, 2840, 2842, 2850, 2860, 2862, 2870, 2880, 2882, 2890, 2892, 2900, 2902, 2910, 2912, 2920, 2922, 2930, 2940, 2942, 2950, 2960, 2962, 2970, 2972, 2980, 2982, 2990, 2992, 3000, 3002, 3010, 3020, 3022, 3030, 3040, 3042, 3050, 3052, 3060, 3062, 3070, 3072, 3080, 3082, 3090, 3100, 3102, 3110, 3120, 3122, 3130, 3132, 3140, 3142, 3150, 3152, 3160, 3162, 3170, 3180, 3182, 3190, 3200, 3202, 3210, 3212, 3220, 3222, 3230, 3232, 3240, 3242, 3250, 3260, 3262, 3270, 3280, 3282, 3290, 3292, 3300, 3302, 3310, 3312, 3320, 3322, 3330, 3340, 3342, 3350, 3360, 3362, 3370, 3372, 3380, 3382, 3390, 3392, 3400, 3402, 3410, 3420, 3422, 3430, 3440, 3442, 3450, 3452, 3460, 3462, 3470, 3472, 3480, 3482, 3490, 3500, 3502, 3510, 3520, 3522, 3530, 3532, 3540, 3542, 3550, 3552, 3560, 3562, 3570, 3580, 3582, 3590, 3600, 3602, 3610, 3612, 3620, 3622, 3630, 3632, 3640, 3642, 3650, 3660, 3662, 3670, 3680, 3682, 3690, 3692, 3700, 3702, 3710, 3712, 3720, 3722, 3730, 3740, 3742, 3750, 3760, 3762, 3770, 3772, 3780, 3782, 3790, 3792, 3800, 3802, 3810, 3820, 3822, 3830, 3840, 3842, 3850, 3852, 3860, 3862, 3870, 3872, 3880, 3882, 3890 };
        pos = new int[] { 000, 001,002,003,004,005,006,007,008,009,010,011,012,013,014,015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015 };
        length = new int[] {};
        Debug.Log(beat.Length);
        Debug.Log(pos.Length);
        Debug.Log(length.Length);
    }

    public void SetSecondRun()
    {
        AudioClip clip = Resources.Load<AudioClip>("Sound/SecondRun94");
        musicLength = clip.length;
        audioSource.clip = clip;
        musicTitle = "SecondRun";
        bpm = 95;
        songBeat = 4;
        stdBeat = 4;
        offset = (float)-0.81f;
        customOffset = (float)0.0;
        totalNote = 228;
        beat = new int[] {  21, 23, 33, 43, 43, 53, 63, 73, 83, 83, 101, // 3
            103, 121, 123, 140, 141, 142, 143, 163, 173, 181, // 5
            183, 200, 201, 202, 203, 213, 221, 222, 223, 261, 262, // 7
            263, 272, 281, 302, 303, 312, 333, 341, 343, 360, 361, 362, 363, 381,  // 10
            383, 391, 392, 400, 402, 440, 441, 442, 443, 461, // 12
            463, 520, 521, 522, 523, 542, // 14
            543, 551, 552, 560, 562, 571, 573, 581,583, 592, 601, 603, 620, 621, 622, 623, 632, // 17
            663, 691, 693, 701,703, 712, 721, 741 ,743, 771, 773, 781, 782, // 20
            792, 801, 813, 821, 823, 841, 842, 851, 853, 861, 863, 881, 883, 901, 902, // 23   
            903, 912, 921, 940, 941, 942, 950, 981, 983, 1000, 1001, 1002, 1003, 1021, 1022, // 26
            1023, 1033, 1043, 1053, 1061, 1063, 1080, 1081, 1082, 1083, 1100, 1101, 1102, // 28
            1103, 1113, 1123, 1131, 1132, 1133, 1142, 1143, 1160, 1161, 1162, 1163, 1181, 1182, // 30
            1183, 1193, 1203, 1223, 1232, 1242, 1260, 1261, 1262, // 32
            1263, 1272, 1283, 1301, 1303, 1320, 1321, 1322, 1323, 1341, 1342, // 34
            1343, 1363, 1372, 1381, 1383, 1400, 1401, 1042, 1403, 1420, 1421, 1422, // 36
            1423, 1440, 1441, 1442, 1443, 1451, 1452, 1453, 1462, 1463, 1471, 1472, 1473, 1483, 1501, 1502, // 38
            1503, 1523, 1533, 1543, 1552, 1561, 1563, 1572, 1581, 1583, 1593, 1601, 1603, // 41
            1623, 1632, 1641, 1643, 1671, 1673, 1681, 1683, 1700, 1723, 1732, 1741, // 44
            1743, 1751, 1753, 1761, 1763, 1781
             };
        pos = new int[] { 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015 };
        length = new int[] {};
        Debug.Log(beat.Length);
        Debug.Log(pos.Length);
        Debug.Log(length.Length);
    }

    public void SetHBA()
    {
        AudioClip clip = Resources.Load<AudioClip>("Sound/music/hba");
        musicLength = clip.length;
        audioSource.clip = clip;
        musicTitle = "Heartbreaking Anniversary";
        bpm = 130;
        songBeat = 4;
        stdBeat = 4;
        offset = (float)-0.81f;
        customOffset = (float)0.0;
        totalNote = 232;   
        beat = new int[] { 41, 61, 71, 81, 91, 91, 93, 93, 101, 101, 112, 112, 122, 142, 152, 162, 172, 173, 180, 183, 193, 203, 203, 223, 223, 243, 263, 273, 281, 283, 291, 293, 301, 313, 332, 332, 332, 332, 
            362, 381, 382, 390, 402, 402, 422, 422, //Balloons are deflated
            442, 462, 471, 473, 482, 502, 511, //Guess they look lifeless like me
            522, 541, 542, 551, 553, 562, 572, 582, 591, 592, 602,  622, 642, 662, //We miss you on your side of the bed, mmm
            682, 702, 702, 711, 711, 713, 713, 722, 732,//Still got your things here
            762, 771, 771, 781, 781, 790, 791, 793, 801, 803, 813, //And they stare at me like souvenirs
            842, 861, 862, 870, 872, 882, 892, 912, 920, //Don't wanna let you out my
            922, /*here*/ 942, 962, 983, 990, 991, //Just like the
            1002, 1002, 1022, 1023, 1042, 1042, 1062, 1063, //day that I met you //The day I thought forever
            1082, 1082, 1102, 1103, 1122, 1122, 1142, 1143, //Said that you love me //But that'll last for never
            1162, 1162, 1162, 1162, 1172, 1172, 1172, 1172, 1182, 1182, 1182, 1182, //It's cold outside
            1202, 1202, 1222, 1223, 1242, 1242, 1262, 1263, 1282, 1282, 1292, 1292, //Like when you walked out my life Why you walk out my life?
            1322, 1323, 1342, 1342, 1362, 1380, 1382, 1390, 1392, 1400, 1402, 1403, 1420, 1422, 1430, 1442, 1462, 1462, 1472, 1472,  //I get like this every time On these
            1482, 1490, 1492, 1500, 1502, 1512, 1520, 1522, 1542, //days that feel like you and me
            1562, 1570, 1572, 1580, 1582, 1592, 1601, 1602, 1612, //Heartbreak anniversary
            1632, 1642, 1643, 1662, 1662, 1662, 1662, 1682, 1700, 1702, 1710, 1712, 1720, //'Cause I remember every
            1722, 1723, 1742, 1743, 1750, 1762, 1782, 1782, 1792, 1792, //time On these
            1802, 1810, 1812, 1820, 1822, 1832, 1840, 1842, 1862, 1862, //days that feel like you and me
            1882, 1883, 1890, 1891, 1892, 1910, 1922, 1923, 1930, 1931, 1932, 1950, 1962, 1962, 1962, 1962, 1972, 1982, 1992};
        pos = new int[] { 008, 000, 001, 002, 001, 002, 005, 006, 009, 010, 013, 014, 003, 000, 004, 008, 003, 007, 006, 010, 009, 008, 011, 008, 011, 000, 006, 008, 015, 011, 007, 003, 002, 006, 000, 003, 012, 015,
            008, 000, 001, 002, 005, 006, 009, 010, //Balloons are deflated
            008, 003, 007, 011, 015, 000, 006, //Guess they look lifeless like me
            008, 004, 013, 010, 007, 003, 002, 001, 000, 005, 010, 008, 008, 008, //We miss you on your side of the bed, mmm
            008, 000, 001, 004, 005, 008, 009, 003, 008, //Still got your things here
            008, 005, 006, 009, 010, 000, 003, 004, 007, 008, 011, //And they stare at me like souvenirs
            008, 012, 008, 004, 000, 015, 011, 000, 004, //Don't wanna let you out my
            008, 008, 008, 000, 001, 002, //Just like the
            005, 006, 003, 007, 009, 010, 000, 004, 005, 006, 003, 007, 009, 010, 000, 004,
            000, 003, 005, 006, 004, 007, 009, 010, 008, 011, 013, 014, //It's cold outside
            000, 003, 006, 010, 000, 003, 005, 009, 000, 004, 003, 007, //Like when you walked out my life Why you walk out my life?
            008, 004, 008, 011, 008, 008, 015, 011, 007, 003, 008, 004, 003, 007, 011, 008, 012, 015, 012, 015, //I get like this every time On these
            000, 005, 010, 015, 014, 013, 012, 007, 008, //days that feel like you and me
            003, 006, 009, 012, 013, 014, 000, 001, 002, //Heartbreak anniversary
            008, 000, 001, 000, 003, 012, 015, 008, 011, 004, 007, 000, 003, //'Cause I remember every
            005, 006, 009, 010, 013, 008, 000, 003, 000, 003, //time On these
            004, 007, 005, 006, 009, 010, 008, 011, 012, 015, //days that feel like you and me
            000, 003, 004, 007, 008, 011, 000, 003, 004, 007, 008, 011, 007, 008, 011, 013,
            001, 005, 009 };
        length = new int[] { 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000 };
        Debug.Log(beat.Length);
        Debug.Log(pos.Length);
        Debug.Log(length.Length);
    }

    public void SetBecauseChristmas()
    {
        AudioClip clip = Resources.Load<AudioClip>("Sound/BecauseChristmas125");
        musicLength = clip.length;
        audioSource.clip = clip;
        musicTitle = "BecauseChristmas";
        bpm = 125;
        songBeat = 4;
        stdBeat = 4;
        offset = (float)-0.81f;
        customOffset = (float)0.0;
        totalNote = 238;
        beat = new int[] {
            // 전주
            40, 43, 52, 71,
            83, 102, 121, 130,
            141, 152, 162, 173,
            192, 211, 230, 233,
            242, 251,
            270, 283, 302,
            // 가사시작
            400, 403, 410, 413, 423, //오늘은 뭔가 
            440, 443, 453, // 좀다른 
            470, 483, // 기 ~ 분
            510, 523, // Feeling
            560, 563, 570, 573, 583, // 이젠 때가 된
            600, 603, 613, // 것같은
            630, 643, // 느낌
            670, 683, // 러브유
            720, 723, 730, 733, 743, // 하늘에선마
            760, 763, 773, // 침눈이
            790, 803, 813, 820, 823, // 내려 now it's fall -
            843, // -ing

            870, 880, 883, 893, 903, // 뭔가잘될것
            913, 923, 933, 943, // 같은예감
            1020, 1023,// 하얀
            1040, 1043, 1050, 1053, 1063, // 거리마다행
            1080, 1083, 1093, 1103, // 복해보이
            1113, 1123, 1133, 1143,  // 는연인들
            1173, 1180, 1183, // 니맘은

            1193, 1200, 1203, 1213, 1220, 1223, // 어떤지 내맘과
            1233, 1240, 1243, 1263, // 같은지우
            1270, 1280, 1290, 1293, 1300, 1303,// 리시작해볼까
            1323, // 워
            1350, 1360, 1370, 1373, 1383, // 오늘은괜찮
            1400, 1410, 1413, 1423, // 을까요내

            1440, 1450, 1453, 1463, // 맘이전해
            1480, 1483, 1493, 1503, // 질까요내
            1520, 1523, 1533, 1540, 1543, // 리는하얀눈
            1553, 1563, 1583, // 처럼너
            1590, 1600, 1610, 1613, 1620, 1623,// 에게닿을까요
            1670, 1680, 1690, 1693, 1703, // 숨겨왔던내
            1720, 1723, 1733, // 맘전부


            1750, 1760, 1763, 1773, 1783, // 고백할게요
            1830, 1840, 1843, 1853, 1863, // 바로오늘 크리스
            1873, 1883, 1893, 1903, // 마스이니까
            1973, // 오
            1993, 2003, 2010, 2013, 2023, // 사실그대도
            2040, 2043, 2053, // 조금은


            2070, 2083, 2093, 2100, 2103, // 기댈했잖아
            2122, // 요
            2150, 2153, 2160, 2163, 2170, 2173, 2180, 2183, // 못이기는척웃는너
            2230, 2233, 2240, 2243, 2250, 2253, 2260, 2263,// 그런니가사랑스러
            2283, // 워
            2310, 2320, 2330, 2333, 2343, // 오늘은괜찮
            2360, 2363, 2373, 2383, // 을까요내


            2400, 2410, 2413, 2423, // 맘이전해
            2440, 2443, 2453, 2463, // 질까요내
            2473, 2483, 2493, 2500, 2503, // 리는하얀눈
            2513, 2523, 2543, // 처럼너
            2550, 2560, 2570, 2573, 2580, 2583, // 에게닿을까요
            2630, 2640, 2650, 2653, 2663, // 숨겨왔던내
            2680, 2683, 2693, 2703, // 맘전부고


            2720, 2723, 2733, 2743, // 백할게요
            2790, 2800, 2803, 2813, 2823, // 바로오늘 크리스
            2833, // 마스

             };
        pos = new int[] { 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015 };
        length = new int[] {};
        Debug.Log(beat.Length);
        Debug.Log(pos.Length);
        Debug.Log(length.Length);
    }
}

//public class NoteData
//{
//    public int beat;
//    public int posX;
//    public int posY;
//    public int length;
//    public int demi;

//    public NoteData(int b, int x, int y, int l, int d)
//    {
//        this.beat = b;
//        this.posX = x;
//        this.posY = y;
//        this.length = l;
//        this.demi = d;
//    }
//}

//public class MusicManager : MonoBehaviour
//{
//    public static MusicManager instance;

//    public AudioSource audioSource; // 오디오 정보
//    public string musicTitle; // 음악의 제목
//    public float musicLength; // 음악의 길이
//    public float musicEnd; // 음악이 끝나는 시간
//    public int totalNote; // 총 노트의 갯수
//    public int bpm = 0; // beats per minute : 1분당 비트 수 
//    public int songBeat = 4; // 한 마디의 비트 수 
//    public int stdBeat = 4; // 한 비트의 길이
//    public float offset = 0; // 노래가 시작되는 시작된 지점
//    public float customOffset = 0; // 플레이어가 바꾼 오프셋

//    int[] beat;
//    int[] posX;
//    int[] posY;
//    int[] length;
//    int[] demi;

//    // 싱글톤 인스턴스에 접근하는 속성

//    void Awake()
//    {
//        instance = this;
//        audioSource = GetComponent<AudioSource>();
//    }

//    public NoteData getNoteData(int idx)
//    {
//        return new NoteData(beat[idx], posX[idx], posY[idx], length[idx], demi[idx]);
//    }

//public void SetKanon()
//{
//    AudioClip clip = Resources.Load<AudioClip>("Sound/Canon");
//    musicLength = clip.length;
//    audioSource.clip = clip;
//    musicTitle = "Kanon";
//    bpm = 140;
//    songBeat = 4;
//    stdBeat = 4;
//    offset = (float)-0.81f;
//    customOffset = (float)0.0;
//    totalNote = 402;
//    beat = new int[] { 50, 90, 130, 170, 210, 250, 290, 330, 370, 370, 410, 410, 450, 450, 490, 490, 530, 530, 570, 570, 610, 610, 650, 650, 690, 690, 730, 730, 750, 770, 770, 810, 810, 830, 850, 850, 890, 890, 910, 930, 930, 970, 970, 1010, 1010, 1050, 1070, 1090, 1110, 1130, 1170, 1170, 1210, 1210, 1250, 1270, 1290, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1390, 1410, 1430, 1450, 1460, 1470, 1480, 1490, 1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 1610, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1710, 1730, 1750, 1770, 1780, 1790, 1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 1900, 1910, 1920, 1930, 1942, 1950, 1960, 1962, 1970, 1980, 1990, 2000, 2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090, 2100, 2110, 2120, 2130, 2140, 2150, 2160, 2170, 2180, 2190, 2200, 2210, 2220, 2230, 2240, 2250, 2260, 2270, 2280, 2290, 2300, 2310, 2320, 2330, 2340, 2350, 2360, 2370, 2380, 2390, 2400, 2410, 2420, 2430, 2440, 2450, 2460, 2470, 2480, 2490, 2500, 2510, 2520, 2530, 2540, 2550, 2560, 2570, 2580, 2590, 2600, 2610, 2620, 2622, 2630, 2640, 2642, 2650, 2652, 2660, 2662, 2670, 2672, 2680, 2682, 2690, 2700, 2702, 2710, 2720, 2722, 2730, 2732, 2740, 2742, 2750, 2752, 2760, 2762, 2770, 2780, 2782, 2790, 2800, 2802, 2810, 2812, 2820, 2822, 2830, 2832, 2840, 2842, 2850, 2860, 2862, 2870, 2880, 2882, 2890, 2892, 2900, 2902, 2910, 2912, 2920, 2922, 2930, 2940, 2942, 2950, 2960, 2962, 2970, 2972, 2980, 2982, 2990, 2992, 3000, 3002, 3010, 3020, 3022, 3030, 3040, 3042, 3050, 3052, 3060, 3062, 3070, 3072, 3080, 3082, 3090, 3100, 3102, 3110, 3120, 3122, 3130, 3132, 3140, 3142, 3150, 3152, 3160, 3162, 3170, 3180, 3182, 3190, 3200, 3202, 3210, 3212, 3220, 3222, 3230, 3232, 3240, 3242, 3250, 3260, 3262, 3270, 3280, 3282, 3290, 3292, 3300, 3302, 3310, 3312, 3320, 3322, 3330, 3340, 3342, 3350, 3360, 3362, 3370, 3372, 3380, 3382, 3390, 3392, 3400, 3402, 3410, 3420, 3422, 3430, 3440, 3442, 3450, 3452, 3460, 3462, 3470, 3472, 3480, 3482, 3490, 3500, 3502, 3510, 3520, 3522, 3530, 3532, 3540, 3542, 3550, 3552, 3560, 3562, 3570, 3580, 3582, 3590, 3600, 3602, 3610, 3612, 3620, 3622, 3630, 3632, 3640, 3642, 3650, 3660, 3662, 3670, 3680, 3682, 3690, 3692, 3700, 3702, 3710, 3712, 3720, 3722, 3730, 3740, 3742, 3750, 3760, 3762, 3770, 3772, 3780, 3782, 3790, 3792, 3800, 3802, 3810, 3820, 3822, 3830, 3840, 3842, 3850, 3852, 3860, 3862, 3870, 3872, 3880, 3882, 3890 };
//    pos = new int[] { 000, 015, 003, 012, 001, 014, 002, 013, 000, 001, 007, 006, 004, 008, 015, 011, 005, 006, 009, 010, 012, 003, 000, 015, 001, 005, 008, 009, 010, 014, 015, 011, 010, 009, 002, 006, 012, 008, 004, 000, 001, 006, 007, 011, 000, 001, 002, 003, 007, 011, 015, 005, 006, 009, 010, 000, 001, 002, 003, 006, 005, 010, 009, 013, 014, 001, 002, 003, 001, 002, 003, 007, 006, 005, 004, 008, 009, 010, 011, 015, 013, 014, 010, 007, 002, 006, 005, 010, 009, 013, 014, 001, 002, 003, 001, 002, 003, 007, 006, 005, 004, 008, 009, 010, 011, 015, 014, 013, 012, 010, 004, 005, 006, 007, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 004, 005, 006, 007, 008, 009, 010, 011, 012, 013, 014, 015, 000, 001, 002, 003, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 007, 004, 005, 006, 000, 001, 002, 011, 010, 009, 012, 013, 014, 015, 007, 004, 005, 006, 008, 009, 010, 014, 013, 012, 015, 011, 007, 006, 000, 003, 002, 001, 005, 004, 011, 010, 009, 008, 012, 013, 014, 015, 007, 006, 010, 014, 013, 012, 004, 005, 006, 007, 008, 009, 010, 011, 012 };
//    length = new int[] {};
//    Debug.Log(beat.Length);
//    Debug.Log(pos.Length);
//    Debug.Log(length.Length);
//}

//    public void setChristmas()
//    {
//        AudioClip clip = Resources.Load<AudioClip>("Sound/ChristmasMemory");
//        musicLength = clip.length;
//        musicEnd = 0;
//        audioSource.clip = clip;
//        bpm = 170;
//        songBeat = 4;
//        stdBeat = 4;
//        offset = (float)-0.13;
//        customOffset = (float)0.0;
//        totalNote = 197;
//        beat = new int[] { 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 29, 31, 33, 34, 35, 37, 39, 41, 43, 45, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 109, 114, 115, 116, 117, 122, 123, 124, 125, 130, 131, 132, 133, 138, 139, 140, 141, 141, 142, 143, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 159, 161, 163, 165, 167, 169, 169, 173, 173, 178, 179, 180, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 200, 201, 203, 205, 207, 209, 209, 214, 215, 216, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 229, 231, 231, 233, 233, 238, 239, 240, 242, 243, 244, 245, 245, 247, 247, 249, 249, 254, 255, 256, 258, 259, 260, 261, 261, 263, 263, 265, 266, 267, 269, 271, 273, 274, 275, 277, 279, 281, 281, 282, 282, 283, 283, 285, 287, 289, 291, 293, 293, 297, 297 };
//        posX = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//        posY = new int[] { 3, 4, 5, 6, 2, 3, 4, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 2, 1, 4, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 3, 3, 3, 2, 3, 4, 4, 5, 6, 6, 5, 4, 4, 3, 2, 2, 1, 0, 0, 1, 2, 3, 3, 3, 4, 0, 5, 2, 6, 3, 5, 1, 5, 2, 6, 0, 4, 1, 5, 4, 3, 4, 2, 5, 3, 2, 5, 2, 2, 5, 3, 6, 1, 4, 2, 5, 4, 1, 3, 2, 4, 5, 2, 4, 4, 3, 4, 4, 3, 4, 6, 2, 2, 1, 2, 2, 1, 2, 4, 3, 3, 4, 2, 2, 3, 4, 2, 1, 4, 5, 6, 2, 4, 5, 1, 3, 0, 4, 1, 2, 3, 4, 5, 2, 1, 3, 4, 1, 2, 4, 1, 3, 6, 2, 4, 1, 5, 2, 4, 6, 2, 1, 5, 4, 4, 3, 2, 1, 0, 5, 4, 3, 2, 1, 5, 2, 6, 3, 3, 0, 1, 3, 5, 2, 4, 6, 3, 4, 1, 4 };
//        length = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//        demi = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//        //length = new int[] { 4, 3, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3 };

//    }

//    public void setRainy()
//    {
//        AudioClip clip = Resources.Load<AudioClip>("Sound/RainyDay");
//        musicLength = clip.length;
//        audioSource.clip = clip;
//        musicTitle = "Rainy Day";
//        bpm = 160;
//        songBeat = 4;
//        stdBeat = 4;
//        offset = (float)-0.3;
//        customOffset = (float)0.0;
//        totalNote = 23;
//        beat = new int[]   { 005, 009, 011, 013, 016, 017, 017, 019, 020, 021, 024, 024, 025, 027, 027, 028, 029, 029, 030, 030, 032, 033, 035};
//        posX = new int[]   { 000, 000, 000, 000, 002, 000, 002, 000, 000, 000, 000, 002, 000, 000, 002, 000, 000, 000, 002, 002, 000, 000, 000};
//        posY = new int[]   { 003, 005, 003, 001, 003, 005, 006, 006, 004, 002, 004, 005, 004, 004, 005, 002, 004, 006, 003, 002, 004, 004, 006};
//        length = new int[] { 003, 001, 001, 003, 000, 000, 001, 000, 000, 003, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 001, 001};
//        demi = new int[]   { 000, 000, 000, 000, 000, 000, 002, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000 };
//        //length = new int[] { 4, 3, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3 };

//    }

//    public void setSunset()
//    {
//        AudioClip clip = Resources.Load<AudioClip>("Sound/SunsetRoad");
//        musicLength = clip.length;
//        audioSource.clip = clip;
//        musicTitle = "Sunset Road";
//        bpm = 200;
//        songBeat = 4;
//        stdBeat = 4;
//        offset = (float)-0.8;
//        customOffset = (float)0.0;
//        totalNote = 23;
//        beat = new int[] { 005, 009, 011, 013, 016, 017, 017, 019, 020, 021, 024, 024, 025, 027, 027, 028, 029, 029, 030, 030, 032, 033, 035 };
//        posX = new int[] { 000, 000, 000, 000, 002, 000, 002, 000, 000, 000, 000, 002, 000, 000, 002, 000, 000, 000, 002, 002, 000, 000, 000 };
//        posY = new int[] { 001, 002, 003, 004, 005, 006, 007, 008, 009, 008, 004, 005, 004, 004, 005, 002, 004, 006, 003, 002, 004, 004, 006 };
//        length = new int[] { 020, 006, 008, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000 };
//        demi = new int[] { 000, 000, 000, 000, 000, 000, 002, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000 };

//    }
//}
